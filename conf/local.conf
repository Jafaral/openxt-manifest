# CONF_VERSION is increased each time conf/ changes incompatibly
CONF_VERSION = "1"

#INHERIT += "rm_work"

# Which files do we want to parse:
BBMASK = ""

# What kind of images do we want?
IMAGE_FSTYPES_append = " tar.xz"

DISTRO ?= "openxt-unstable"

# Set DEPLOY_DIR outside of TMPDIR
DEPLOY_DIR = "${TMPDIR}/../deploy/${TCLIBC}"

# Don't generate the mirror tarball for SCM repos, the snapshot is enough
BB_GENERATE_MIRROR_TARBALLS = "0"

#
# Parallelism Options
#
# These two options control how much parallelism BitBake should use.
# The first option determines how many tasks bitbake should run in parallel:
# Default to setting automatically based on cpu count
BB_NUMBER_THREADS ?= "${@oe.utils.cpu_count()}"
#
# The second option controls how many processes make should run in parallel
# when running compile tasks:
# Default to setting automatically based on cpu count
PARALLEL_MAKE ?= "-j ${@oe.utils.cpu_count()}"


#
# Shared-state files from other locations
#
# Shared state files are prebuilt cache data objects which can used to
# accelerate build time. This variable can be used to configure the system to
# search other mirror locations for these objects before it builds the data
# itself.
#
# This can be a filesystem directory, or a remote url such as http or ftp.
# These would contain the sstate-cache results from previous builds (possibly
# from other machines). This variable works like fetcher MIRRORS/PREMIRRORS
# and points to the cache locations to check for the shared objects.
#SSTATE_MIRRORS ?= "\
#file://.* http://someserver.tld/share/sstate/ \n \
#file://.* file:///some/local/dir/sstate/"

#SSTATE_MIRRORS ?= "\
#file://.* http://dominion.thruhere.net/angstrom/sstate-mirror/ \n "

# enable PR service on build machine itself its good for a case when this is
# the only builder generating the feeds
#
PRSERV_HOST = "localhost:0"

# TODO: This should not be in local.conf
#       Probably belongs to something equivalent to bitbake.conf (defines
#       KERNELORG_SOURCE, etc), but that one cannot be extended it seems.
XEN_VERSION="4.6.4"
XEN_SRC_URI="http://bits.xensource.com/oss-xen/release/4.6.4/xen-4.6.4.tar.gz"
XEN_SRC_MD5SUM="e8d2d8c49a71590bf5b5cad883d089f6"
XEN_SRC_SHA256SUM="b795d5631a85fb68295361067195ecd00003656dacede4ec57533fce33ab5109"

OPENXT_MIRROR="http://mirror.openxt.org"
OPENXT_GIT_MIRROR="github.com/OpenXT"
OPENXT_GIT_PROTOCOL="git"
OPENXT_BRANCH="master"
OPENXT_TAG="master"

# TODO: This probably belongs to the xenclient-oe layer.
REPO_PROD_CACERT="${OPENXT_CERTS_DIR}/prod-cacert.pem"
REPO_DEV_CACERT="${OPENXT_CERTS_DIR}/dev-cacert.pem"
REPO_DEV_SIGNING_CERT="${OPENXT_CERTS_DIR}/dev-cacert.pem"
REPO_DEV_SIGNING_DEV="${OPENXT_CERTS_DIR}/dev-cakey.pem"
